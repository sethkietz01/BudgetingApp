@model List<BudgetingApp.Models.GoalModel>
@{
    ViewData["Title"] = "Goals";
}

<div class="text-center">
    <h1 class="display-4">Goals</h1>
</div>

<div class="goals-table-group">
    <table id="goals-table">
        <thead>
            <tr>
                <th>Goal Name</th>
                <th>Goal Amount</th>
                <th>Goal Date</th>
                <th>Goal Priority</th>
                <th>Monthly Savings Needed</th>
                <th>Saved Amount</th>
                <th>Progress</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var goal in Model)
                {
                    <tr>
                        <td>@goal.GoalName</td>
                        <td>@goal.GoalAmount.ToString("C")</td>
                        <td>@goal.GoalDate.ToString("d")</td>
                        <td class="goal-priority" data-priority="@goal.GoalPriority"></td>

                        @{
                            /* Calculate the monthly savings needed to reach the goal on time */

                            // Calculate remaining cost
                            double remainingAmount = goal.GoalAmount - goal.SavedAmount;

                            // Determine the number of months from now to the goal date
                            int numberOfMonthsRemaining = 0;

                            if (goal.GoalDate > DateTime.Now)
                            {
                                int years = goal.GoalDate.Year - DateTime.Now.Year;
                                int months = goal.GoalDate.Month - DateTime.Now.Month;

                                numberOfMonthsRemaining = months + years * 12;

                                if (goal.GoalDate.Day < DateTime.Now.Day)
                                    numberOfMonthsRemaining--;

                                if (numberOfMonthsRemaining <= 0)
                                    numberOfMonthsRemaining = 1;
                            }

                            // Determine the monthly savings needed
                            double monthlySavingsNeeded = remainingAmount / numberOfMonthsRemaining;

                            // Calculate progress percentage
                            double progressPercentage = (goal.GoalAmount > 0) ? (goal.SavedAmount / goal.GoalAmount) * 100 : 0;
                            // Ensure progress doesn't exceed 100%
                            if (progressPercentage > 100)
                                progressPercentage = 100;
                        }

                        <td>@monthlySavingsNeeded.ToString("C")</td>
                        <td>@goal.SavedAmount.ToString("C")</td>
                        <td>
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width: @(progressPercentage)%;" aria-valuenow="@((int)progressPercentage)" aria-valuemin="0" aria-valuemax="100">
                                    @((int)progressPercentage)%
                                </div>
                            </div>
                        </td>
                        <td>
                            <form asp-action="EditGoal" asp-controller="Home" method="get">
                                <input type="hidden" name="goalId" value="@goal.DocumentId" />
                                <button type="submit" class="btn button btn-sm">Edit</button>
                            </form>
                        </td>
                        <td>
                            <form asp-action="DeleteGoal" asp-controller="Home" method="post">
                                <input type="hidden" name="goalId" value="@goal.DocumentId" />
                                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7">No goals found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="add-goal-button-container">
    <form asp-action="AddGoal" asp-controller="Home" method="get">
        <button type="submit" class="button">Add Goal</button>
    </form>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Set the link color to gold
        $('#goals-link').css('color', '#fed66d');

        // Get all elements with the class 'goal-priority'
        var goalPriorityCells = document.querySelectorAll('.goal-priority');

        goalPriorityCells.forEach(function(cell) {
            // Get the priority value from the data-priority attribute
            var priorityValue = parseInt(cell.dataset.priority); // Convert to integer

            var displayValue = '';
            if (priorityValue === 0) {
                displayValue = 'Low';
            } else if (priorityValue === 1) {
                displayValue = 'Medium';
            } else if (priorityValue === 2) {
                displayValue = 'High';
            } else {
                displayValue = 'Medium'; // Default value
            }

            cell.textContent = displayValue;
        });
    });
</script>